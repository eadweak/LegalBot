from aiogram.types import CallbackQuery, Message
from aiogram import Router
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from bot.keyboards.court_menu import court_menu
from bot.utils.court_lookup import find_court_by_address
from aiogram import Dispatcher
from aiogram.filters import StateFilter

router = Router()

# –°–æ—Å—Ç–æ—è–Ω–∏—è
class CourtLookupStates(StatesGroup):
    waiting_for_address = State()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ —Å—É–¥–æ–≤
async def court_guide_handler(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ —Å—É–¥–æ–≤.
    """
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=court_menu())
    await callback.answer()

# –ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞ —Å—É–¥–∞
async def start_find_court(callback: CallbackQuery, state: FSMContext):
    """
    –ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞ —Å—É–¥–∞.
    """
    await callback.message.edit_text("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–π–æ–Ω, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–æ–¥—Å—É–¥–Ω—ã–π —Å—É–¥:")
    await state.set_state(CourtLookupStates.waiting_for_address)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
async def process_address(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥—Ä–µ—Å–∞ –∏ –ø–æ–∏—Å–∫ —Å—É–¥–∞.
    """
    address = message.text.strip()
    court = find_court_by_address(address)

    if court:
        response = (
            f"üèõ –ù–∞–π–¥–µ–Ω —Å—É–¥:\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {court['name']}\n"
            f"–ê–¥—Ä–µ—Å: {court['address']}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {court['phone']}\n"
            f"‚úâÔ∏è Email: {court['email']}\n"
            f"üåê –°–∞–π—Ç: {court['url']}"
        )
    else:
        response = "‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—É–¥."

    await message.answer(response, reply_markup=court_menu())
    await state.clear()

def register_court_handlers(dp: Dispatcher):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—É–¥–∞ –ø–æ –∞–¥—Ä–µ—Å—É.
    """
    dp.callback_query.register(court_guide_handler, lambda c: c.data == "court_guide")
    dp.callback_query.register(start_find_court, lambda c: c.data == "enter_address")
    dp.message.register(process_address, StateFilter(CourtLookupStates.waiting_for_address))


